#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π MAS —Å–∏—Å—Ç–µ–º—ã.
"""

import asyncio
import subprocess
import time

def run_command(cmd, description):
    """–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º."""
    print(f"\n{'='*60}")
    print(f"üöÄ {description}")
    print(f"–ö–æ–º–∞–Ω–¥–∞: {cmd}")
    print(f"{'='*60}")
    
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True, encoding='utf-8')
    print(result.stdout)
    if result.stderr:
        print("–û—à–∏–±–∫–∏:", result.stderr)
    
    time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –¥–µ–º–æ

def main():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Å–∏—Å—Ç–µ–º—ã."""
    
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø MAS –°–ò–°–¢–ï–ú–´")
    print("–°–∏—Å—Ç–µ–º–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–≥–æ–≤ —Å –¥–≤—É–º—è –ø–æ–¥—Ö–æ–¥–∞–º–∏")
    
    demos = [
        ("python main.py --help", 
         "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º"),
        
        ("python main.py --approach sync --cases 1 2", 
         "–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –Ω–∞ –∫–µ–π—Å–∞—Ö 1-2"),
        
        ("python main.py --approach async --cases 1", 
         "–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –Ω–∞ –∫–µ–π—Å–µ 1"),
        
        ("python main.py --approach both --cases 3 --save-results demo_results.json", 
         "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–¥—Ö–æ–¥–æ–≤ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"),
        
        ("python main.py --approach async --parallel --cases 1 2 3", 
         "–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ"),
    ]
    
    for cmd, desc in demos:
        try:
            run_command(cmd, desc)
        except KeyboardInterrupt:
            print("\n‚èπÔ∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {e}")
    
    print(f"\n{'='*60}")
    print("‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª demo_results.json –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    print(f"{'='*60}")

if __name__ == "__main__":
    main()
